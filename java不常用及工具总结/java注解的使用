1.在springboot中使用了好多注解，注解不仅仅是可读性，还有其开发速度。
2.元注解：用于注解其他注解的
 （1）Target   @Retention    @Document    @Inherited
    Target:注解声明注解的作用范围，例如范围为类，接口、方法
    Retention:声明了注解的声明周期，注解的有效范围  
        source:源码中有效
        class：在class中有效
        Runtime:在运行时有效
    Document：是一个标记注解，该注解会在生成java文档中保留
    Inherited:注解表明子类是有继承了父类的注解

3.自定义注解：java开发中，jdk自带了注解，是第三方中，我们也可以自定义注解
    比如自定义权限管理的注解

    自定义注解就需要使用元注解来声明注解的作用范围、生命周期、继承、是否生辰该文档
    主机也有自己的成员变量
        无成员变量=====>标记注解
        注解的成员变量，只支持原始数据类型、class、Enumeration、Annoation

    现在定义一个@writer注解，直接被四个元注解修饰，指明其作用范围、生命周期、继承、生成文档
    有两个采用变量：name 和 age 


    代码片段：

    