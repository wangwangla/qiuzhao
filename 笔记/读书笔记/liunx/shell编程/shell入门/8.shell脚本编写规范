##shell编写技巧
重点：
    脚本的编写规范
    脚本的优化
    脚本的使用技巧

1.shell脚本的变量都是使用字符串来存储的
2.shell编写的最终目的是实现某个特定的功能，可以进行各种合法操作，可以实现功能，可以进行优化
规范：
    （1）命名规范：
        使用准确而简单的名字
        ·脚本名称
        ·变量名
        ·函数名
      知其名    函数的作用
    变量名称由字母和数字表示，不使用下划线，开头可以使用任意字符，大小写敏感。
    变量名由多个单词组成，那么可以使用下划线和首字母大写的方式区分
    其字其名
3.注释只有一种# ，如果想要输出#使用转义字符，如果有多行注释，那么就可以使用函数注释
    #!/bin/bash
    echo 脚本开始
    echo 使用函数进行注释
    fun()
    {
        echo "XXXXXXXXX"
        echo this \#
    }
    echo "XXX"
    echo"xx"
4.其他规范
    输出结果中使用空行
    测试[]的前后需要加上空格
====================================================================
脚本优化：
    脚本的执行是顺序的，不是并行的，所以在一定程度上对系统资源是一种浪费
优化原则：
    尽量使用内置命令，减少使用外置命令
    内置命令可以直接的执行，不需要查磁盘，所以速度也是比较快的

    一般也不要使用|,他是很耗时间的，当执行的次数较多的时候，资源消耗会很明显，可以使用重定向
提供足够的信息：
    为了使用的可理解性
=================
脚本的使用技巧：
    shell常用的选项
    -a:显示全部内容         -c:执行计数功能             -d:指定目录
    -e:将内容展开           -f:从指定的文件中获取文件    -r:递归方式处理文件
    -v:版本                 -h：获取帮助                -y：yes
    -i：忽略大小写
算术运算：
    let： let算术表达式
    比如10+20
    let sum=20+10
    let num1+num2
    $((num+num2))

高等算术:
    bc:是Bash中存在的一个高级的数学运算工具，不但是实现浮点运算，还可以调用其中的函数
    算术表达式|bc
    使用bc一般都是借助管道来实现各自算术运算的，会使用双引号括起来，区分于其他的运算
    举例：
        “1.29*34.3”|bc    使用“”，使用管道
        "sqrt(XXX)"|bc
        "obase=X,$num"|bc  #转成X禁止，将num这个数字







[目录](https://github.com/wangwangla/biji/tree/master/README.md)