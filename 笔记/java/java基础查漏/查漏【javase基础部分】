1.版本：8u45代表jdk8,u代表update，45代表电子版本
2.jdk是绿色的，可以带走，但是使用安装版本，可以在新版本来的时候，自己会进行更新
3.window下基本指令：
    cd 
    dir：列出当前目录下的文件夹
    md:创建
    rd：删除
    del：删除
    cls:清屏
4.标识符
    定义：自定义的一些名称
    特点：可以使用中文、下划线、字母、$
    规定：数组不开头
         不使用关键字
         不包含下划线、$以外的特殊字符
5.代码规范
    包名：多个单词组成是所有字母都小写
    类名：首字母都大写
    变量名和函数：第一个小写，其他的都大写
    常量：都大学
6.注释不会占用class文件的字节码大小
  文档注释可以被jdkdoc解析，并生成说明文档
7.十进制变为二进制、八进制、十六进制都是先变为二进制，然后在变为相应的进制位
  负数的二进制表现形式就是对应的正数二进制取反加1
  比如 -6  
  负数的最高位为1
8.变量：就是有一个名字，有一个空间，有相应的数据类型一个范围内不断的发生变化
  为什么使用：不断的存放同一类型的数据，并可以重复使用
9.java中的数据类型以及空间的大小
  byte[1]  short[2]  char[2] int[4] float[4] long[8] double[8] 
  八种之外的都是引用数据类型
  （1）整数默认是：int类型，小数默认是double
  （2）double类型的小数精度比float类型的小数更高
10.常见错误：
            long数据类型之后加上L  
            float之后需要加上f
            局部变量是没默认值的
            注意数据的作用范围
            char和数字相加，最后是数字【类型转换】，想要现实字符，可以使用强制转换
            两个常量运算，结果是不会报错的，也不会提升类型，变量会出现类型错误
            整数相除的时候，不会出现小数
            取模运算，最后的符号看的是前面的数据
            s+=4;在编译时期进行了强制转换
            ^[异或]:false^true==>true
            一个数异或自己两次结果还是那个数
    总结：都是默认的数据类型造成的错误
11.左右移动：箭头在那边就想那边移动，空位就会直接补0，以为就丢弃高位，空缺位补0，右移的时后，最高位是几，就补几。
   >>>无符号移动:被移位二进制最高位无论是0还是1，空缺都用0补。
12.switch的数据类型：  
    byte/short/int/char/string  
13.for循环之后，变量还可以继续使用，while数据不会再被使用
14."\t"是一个转义字符，也就是制表字符
  转义字符：
    \n：回车  \b：推格  \r:回车符 

  windows系统中回车符其实就时由两个转义字符组成的：\r\n
  liunx中回车是\n 
15.方法返回值可以是任何类型的，如果是void，那么可以省略不写，也可以写成return；
16.函数中只可以调用函数，不可以定义函数。
17.int []arr = new int[10];
   int []arr = new int[]{};
   int []arr = {};
18.栈内存：用于存储局部变量，当变量所属的作用域一旦结束从，所占空间会自动释放
   堆内存：存放数组和对象，通过new建立的实例都存在堆内存中。

[目录](https://github.com/wangwangla/biji/tree/master/README.md)