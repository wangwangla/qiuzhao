面试题
1.collect和collections的区别：
    collection是接口，他是List和Set的接口
    collections是一个工具类，提供了各种方便集操作的方法

2.静态变量和是变量？？
    静态变量直接可以通过类名访问
    静态变量属于类，成员变量属于具体的对象


3.Exception和Error的区别
    

4.String不是基本数据类型  他是primitive type[基本类型]、reference type[抽象数据类型]

5.java是面向对象语言，为了编程方便，它也提供了8种基本数据类型，他为每一个基本数据类需提供了包装类，java 5提供了自动拆装箱
可以方便进行二者之建的转换。

6.解释内存中的栈和堆？？
    定义一个基本数据类型的变量、对象的引用、函数调用的现场保护，我们会放在栈中，通过new 创建的数据对象会放入到堆中，对用是垃圾回收的
    场所，，由于垃圾回收也是按照分代的方式进行的，所以将其分为年轻代和老年代，在具体一点年轻代可以分为Eden、Survivor有可以分为form 
    X和to XX

    方法区和堆都是线程锁共享的区域，方法区是堆中的一片区域，用于存储类信息、字节码、常量、静态变量。

    栈操作是最开的但是也是最小的区域，堆和栈都是在开始的时候设置的，栈用完会栈溢出，对用完，会内存溢出。

7.switch在java 5之前是int byte short ,java 5之后可以是枚举，在1,7之后加入了string，但是long目前我知道的还不可以，至少1.7

8.hashcode的编写

9.JVM加载class文件的原理机制？
    JVM中类的装载是classLoader和它的子类实现的，他是一个重要的组件，负责将查找和装入来文件中的类，

10、简述synchronized和java.util.concurrent.locks.Lock的异同？
主要相同点：Lock能完成synchronized所实现的所有功能
主要不同点：Lock有比synchronized更精确的线程语义和更好的性能。
           synchronized会自动释放锁，而Lock一定要求程序员手工释放，并且必须在finally从句中释放。

11.描述一下JVM加载class文件的机制
    JVM中类是由类加载器classLoader或者他的子类完成的，Java中的类加载器是一个重要的java运行时组件，他负责在运行时查找
    和装入类文件的类
    java是跨平台的，经过编译之后java程序并不是一个可执行程序，

12.重载和覆盖都是进行多态的表现形式，区别在于前者实现的是编译时的多态，后者是运行时多态
重载发生在一个类中，覆盖是在字符之间进行的一种关系

13.为什么不可以使用返回值类型来区别重载
因为方法执行的时候，只是为了达到方法达到的副作用的效果，如果返回值不同，这个时候可能会忽略返回值，这个时候会发生调用不明确的现象

14.值传递，java只支持值传递，当一个实例作为参数传递时，参数的值就是该对象的引用，对象的属性可以在执性的过程中发生修改，但是对象引
用的改变是不会影响到调用者的

15.两个对象的值相同，它的hashcode一定是相同的
他们的规定是如果两个对象相同，那么他们的hashcode是相同的 如果他们的hashcode相同，不一定是相同的

如果不那么做，会发生在容器使用的时候，Set的操作效率会大大下降（如果hashcode冲突会造成存取急剧下降）

补充：equals必须要有自反性，传递性，和一致性，
重写equals的时候必须加上hashcode

16.跳出循环：加上一个标号 ，break 标号 在java中使用break和continue不会使得代码优雅

17.hashcode中为甚使用31这个数，因为这样方便使用移位代替乘法，从未提高效率
