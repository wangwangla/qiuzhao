java并发编程
第一章
1.上下文切换：即就时在的那个处理器也支持多线层执行的代码，CPU根据时间片来实现这个机制
时间片是分配给每一个线程的时间，时间片的长端，代表着线程的优先级
时间片非常的短，所以线程会进行不断的在任务之间进行切换，让我们感觉到他们是在同时执行的。

在切之前会有一个状态保存的过程，以便下次可以切回到这个状态，任务从保存发哦在在加载的过程就是一次上下文切换
2.多线程不一定块，因为上下文切换回浪费很多时间，执行的次数越多，这个差距越明显
3.然后减少上下文的切换
    减少的方法有无锁和CAS，使用最少的线程，不留空闲的线程

    多线程竞争会产生上下文，所以多线程的时候尽可能减少锁的使用【避免竞争锁】
    CAS算法 java提供了原子操作包Atomic就是使用CAS进行的

4.锁可以保证同步，但是所也会造成死锁的问题，一旦有死锁，就会造成不可用的状态

解决死锁的方法：
    （1）避免一个线程同时获取多个锁
    （2）避免一个线层在一个锁里面同时占用多个资源，保证每一个线程一个资源
    （3）尝试使用定时锁，使用lock.tryLock代替使用内部锁机制。

第二章
1.volitile的原理和应用
2.synchronize的实现原理与应用
3.原子操作的原理
4.CAS草操作会有三个问题
（1）ABA问题
    因为CAS会检查值有没有发生变化s
（2）

第三章
1.



























