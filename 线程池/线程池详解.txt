线程必须通过线程池提供，不允许在应用中自行显示的创建线程
使用线程池的好处，就是减去了创建和销毁的时间，解决资源不足的问题，如果不使用线程池，有可能造成系统创建大量同类线程造成内存的消耗过度的问题。


目的：线程是稀缺资源，不能过于频繁的创建
解耦的作用:创建与执行分开，方便维护
应当将其放入一个池子中，可以给其他任务进行复用。

线程池的原理：
    池化技术:其中最核心的思想是将宝贵的资源放入一个池子中，使用的时候从里面获取数据。


java如何实现：
    创建无限线程池
    创建固定大小的线程池
    创建单个线程的线程池

其底层还是使用ThreadPoolExecutor实现，三个参数：
    corePoolSize：核心池的大小
    maximumPoolSize：最大的连接数
    keepAliveTime：线层空闲后存货的时间
    workQueue：用于存放的堵塞队列
    handler:队列和最大线程池都满之后的处理策略

我们运行的时候使用的是execute方法

线程池的状态：
    running：自然是运行状态，可以接受任务执行队列里面的任务
    shutdown:不可以接受任务，但是会等待队列中的任务执行完成
    shutdownnow:不可以接受任务，并且还会使得运行的任务中断
    Terminal：终止状态，当执行会会更新为此状态

任务是如何处理的：
    如果当前的线程数小于核心线程数，任务来的时候，会创建线程来执行
    如果当前的线程数大于核心线程数，任务来的时候就会放入消息队列中，如消息队列中存入失败，就会创建线程来执行
    如果线程的数量大于maxmumPoolsize那么就会将采取拒绝策略。

如何配置线程
    对于线程不是太大了好，也不是太小了好。一般通过性质决定：
    （1）IO密集型任务
    （2）对于密集型任务，创建更少的线程


springboot使用连接池
    