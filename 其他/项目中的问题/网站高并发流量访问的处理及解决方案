缓存高并发下的问题
（1）缓存一直型问题
    当缓存时效性高的时候，需要保证换粗中的数据与数据库的一致，而且需要保证缓存节点和副本中的数据也保持一致

    更新数据库成功-----更新缓存失败
    更新缓存成功----更新数据库失败
    更新数据库成功-----淘汰数据失败


（2）缓存并发问题
    缓存过期后从后端获取数据，这是一个合理的流程，但是，高并发的时候，有可能多个请求同时去了数据库，对数据库造成压力
    我们可以通过锁的方式进行管理，有锁的可以进入数据库操作，没有锁的就只能等待，等有锁的查询之后，更新了数据库，其他的就可以访问数据了
    但是其他的只能咋哪里等待，然后就可以从缓存中获取数据

（3）缓存穿透

















1.硬件升级？？
一般服务器支持的访问量是有限的，如果每天的访问量超过限制，就需要用高性能的专用服务器才可以解决，否则怎样调优都不会解决问题。

2.负载均衡？？
根据负载均衡的策略，将请求发到不同的服务器上，让整个服务器来抵抗请求。

3.服务器集群

4.数据库的读写分离，加快速度

5.数据库的分表技术（垂直和水平分割）

6.表建立索引

7.页面静态化

8.禁止外部倒链

9.控制大文件的下载


IO操作是不会占用CPU




































